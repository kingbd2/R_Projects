setwd("~/Projects/R_Projects/statistical_learning")
attach(Boston)
library(MASS)
library(ISLR)
attach(Boston)
attach(Boston)
lm.fit=lm(medv~lstat)
summary(lm.fit)
lm.fit$effects
help(coef)
render("notes_markdown.Rmd")
library(rmarkdown)
render("notes_markdown.Rmd")
c<-coef(lm.fit)
c
render("notes_markdown.Rmd")
render("notes_markdown.Rmd")
confint(lm.fit)
library(tidyverse)
Boston
Boston$lstat
ggplot(Boston)
ggplot(Boston), aes(x=lsat, y=medv)
ggplot(Boston, aes(x=lsat, y=medv)
dfas
ggplot(Boston, aes(x=lsat, y=medv) + geom_point()
)
ggplot(Boston, aes(x=lsat, y=medv)) + geom_point()
ggplot(Boston, aes(x=lstat, y=medv)) + geom_point()
render("notes_markdown.Rmd")
predict(lm.fit, 5, interval = "confidence")
predict(lm.fit, lstat=5, interval = "confidence")
predict(lm.fit, data.frame(lstat=c(5,10,15)), interval = "confidence")
render("notes_markdown.Rmd")
render("notes_markdown.Rmd")
render("notes_markdown.Rmd")
data.frame(lstat=c(5,10,15))
predict(lm.fit, lstat=5, interval = "confidence")
plot(lstat, medv)
abline(lm.fit)
abline(3,5)
abline(3,50)
abline(30,50)
abline(0,-50)
abline(0,50)
abline(0,5)
render("notes_markdown.Rmd")
plot(lstat, medv,pch=20)
par(mfrow=c(2,2))
plot(lm.fit)
render("notes_markdown.Rmd")
render("notes_markdown.Rmd")
render("notes_markdown.Rmd")
render("notes_markdown.Rmd")
Boston$lstat
render("notes_markdown.Rmd")
